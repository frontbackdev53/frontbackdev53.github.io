{"version":3,"sources":["styles/assets/Vector.svg","styles/assets/howit.svg","styles/assets/footer-1920.png","styles/fonts/Quicksand-Medium.ttf","styles/assets/header-top-1920.png","styles/assets/header-1920.png","store/tweet/tweetActions.js","styles/globals.js","store/auth/authActions.js","components/header/MainPageMenu.js","components/header/Header.js","components/pageNav/MainPageNav.js","components/accHeader/AccountHeader.js","components/howit/HowIt.js","components/accBag/AccountBag.js","components/turnExp/TurnExp.js","components/accMain/AccountMain.js","components/footer/AppFooter.js","components/pages/Home.js","components/pages/About.js","components/auth/LoginForm.js","components/pages/Authorization.js","components/auth/RegistrationForm.js","components/pages/Registration.js","store/error/errorActions.js","components/tweet/ItemForm.js","components/tweet/ItemEditingForm.js","utils/colors.js","components/tweet/TweetListItem.js","components/tweet/TweetList.js","utils/searchItems.js","components/pages/Hashtag.js","components/pages/Mentions.js","components/pages/Page404.js","components/navigation/Navigation.js","components/ErrorNotification.js","components/App.js","store/auth/authReducer.js","store/tweet/tweetReducer.js","store/error/errorReducer.js","storage/authService.js","store/rootSaga.js","store/index.js","store/auth/authMiddleware.js","store/auth/axiosDefaultsMiddleware.js","configs/axios.config.js","store/tweet/tweetMiddleware.js","styles/fonts/fonts.js","index.js"],"names":["module","exports","getListTweets","params","queryParams","Object","entries","map","item","join","type","payload","request","url","updateTweet","id","content","listId","method","data","meta","emptyPosts","MainWrapper","styled","div","ListWrapper","ul","PageContainer","AppNavBarItem","li","ListItemWrap","PostContent","AppNavHeader","ContainerNav","PageTitle","NavMenu","NavUl","NavLi","ContainerAccount","AccHeader","h1","AccNav","NavBtn","ContainerAccMain","AccMainUser","AccMainContent","Content","Details","HelpCenter","AccountDetail","ContainerAccTable","Consignment","AccountBagTable","Terms","ContainerHowIt","HistoryTable","setAuthHeader","access_token","MainPageMenu","this","props","isAuthorized","logOut","className","to","exact","onClick","Component","connect","state","auth","dispatch","menu","Item","target","rel","href","Header","SearchOutlined","UserOutlined","HeartOutlined","ShoppingOutlined","overlay","e","preventDefault","DownOutlined","menuClothing","menuHandbag","menuShoes","menuAccessories","MainPageNav","src","mainLogo","alt","AccountHeader","isShowTurnExp","isShowAccBag","isShowHowIt","style","display","icon","size","CreditCardOutlined","dataSource","key","list","date","status","total","columns","title","dataIndex","render","text","HowIt","isShowHowItt","isShowAccBagg","howIt","bordered","pagination","hashtag","itemType","brand","description","confirmed","manage","textAlign","CheckOutlined","paddingRight","color","EditOutlined","DeleteOutlined","menuType","menuBrand","AccountBag","summary","Summary","fixed","Row","Cell","index","colSpan","PlusCircleOutlined","TurnExp","AccountMain","turnExp","accBag","marginTop","AppFooter","footerImg","useState","setTurnExp","setHowIt","setAccBag","showTurnExp","console","log","showHowIt","showAccBag","About","loginUser","email","password","getFieldDecorator","form","onSubmit","validateFieldsAndScroll","err","username","rules","required","message","prefix","placeholder","LockOutlined","htmlType","Authorization","registerUser","name","userEmail","lastName","userPassword","Registration","setError","errors","ItemForm","search","loading","tags","mentions","loadMentionTagData","debounce","a","getHashTags","getMentions","setState","onSearch","onActionItem","addTweet","formType","validateFields","values","resetFields","toggleFormVisibility","onPressEnter","ctrlKey","metaKey","value","getFieldValue","setFieldsValue","submitButtonName","submitButtonPosition","Option","Mentions","whitespace","min","initialValue","rows","autoFocus","onKeyPress","width","tagName","asPromise","mentionName","handleAction","colors","getAvatarColor","substr","hash","i","length","charCodeAt","Math","abs","TweetListItem","formVisibility","handledHashTagMention","regHashteg","regMention","split","part","match","replace","author","created_at","delTweet","user","isPostYour","contentWithTagsMentions","Meta","Card","authUser","SettingOutlined","notAuthUser","actions","avatar","backgroundColor","toUpperCase","moment","fromNow","tweets","items","filter","toLowerCase","indexOf","searchItems","Hashtag","hashTagName","getHashTagPosts","prevProps","prevState","snapshot","getMentionPosts","Page404","subTitle","extra","Navigation","path","component","Home","from","error","uuid","notification","App","errorsArr","React","appInit","initialState","AuthService","tokenName","tokenValue","localStorage","setItem","removeItem","getItem","rootSaga","axios","createRequestInstance","driver","createDriver","watchRequests","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","action","success","deleteItemId","findIndex","slice","updateItemId","searchQuery","applyMiddleware","thunkMiddleware","store","next","accessToken","setToken","response","getToken","unsetToken","defaults","headers","common","baseURL","requestsPromiseMiddleware","run","GlobalFont","createGlobalStyle","QuicksandMedium","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6fd85637.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.935b8c17.svg\";","module.exports = __webpack_public_path__ + \"static/media/howit.02ca80b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-1920.ef9a774c.png\";","module.exports = __webpack_public_path__ + \"static/media/Quicksand-Medium.db0ad2fc.ttf\";","module.exports = __webpack_public_path__ + \"static/media/header-top-1920.a570fafa.png\";","module.exports = __webpack_public_path__ + \"static/media/header-1920.02470d1d.png\";","export const GETALL_TWEETS = 'GETALL_TWEETS';\nexport const getListTweets = (params = {}) => {\n    const queryParams = Object.entries(params).map(item => item.join('=')).join('&');\n\n    return {\n        type: GETALL_TWEETS,\n        payload: {\n            request: {\n                url: `tweets/?${queryParams}`\n            }\n        }\n    }\n};\nexport const GET_TAG_TWEETS = 'GET_TAG_TWEETS';\nexport const getHashTags = (tagName = '') => {\n    return {\n        type: GET_TAG_TWEETS,\n        payload: {\n            request: {\n                url: `/hashtag/${tagName}`\n            }\n        },\n        meta: {asPromise: true}\n    }\n};\nexport const GET_MENTIONS = 'GET_MENTIONS';\nexport const getMentions = (mentionName = '') => {\n    return {\n        type: GET_MENTIONS,\n        payload: {\n            request: {\n                url: `/mention/${mentionName}`\n            }\n        },\n        meta: {asPromise: true}\n    }\n};\nexport const ADD_TWEET = 'ADD_TWEET';\nexport const addTweet = (content = '') => (\n    {\n        type: ADD_TWEET,\n        payload: {\n            request: {\n                url: 'tweets/',\n                method: 'post',\n                data: {\n                    content\n                }\n            }\n        },\n        meta: {\n            content\n        }\n    }\n);\nexport const DELETE_TWEET = 'DELETE_TWEET';\nexport const delTweet = (id) => (\n    {\n        type: DELETE_TWEET,\n        payload: {\n            request: {\n                url: `tweets/${id}`,\n                method: 'delete',\n                data: {\n                    id\n                }\n            }\n        },\n        meta: {\n            id\n        }\n    }\n);\nexport const UPDATE_TWEET = 'UPDATE_TWEET';\nexport const updateTweet = (id, content, listId) => (\n    {\n        type: UPDATE_TWEET,\n        payload: {\n            request: {\n                url: `tweets/${id}`,\n                method: 'put',\n                data: {\n                    id, content, listId\n                }\n            }\n        },\n        meta: {\n            id\n        }\n    }\n);\nexport const SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nexport const setSearchQuery = (searchQuery) => (\n    {\n        type: SET_SEARCH_QUERY,\n        payload: {\n            searchQuery\n        }\n    }\n);\nexport const EMPTY_POSTS = 'EMPTY_POSTS';\nexport const emptyPosts = () => (\n    {\n        type: EMPTY_POSTS\n    }\n);\n\n","import styled from \"styled-components\";\n\nexport const MainWrapper = styled.div`{\n  font-family: 'Quicksand', sans-serif;\n}`\nexport const ListWrapper = styled.ul`\n  list-style: none;\n`;\nexport const PageContainer = styled.div`\n  margin: 2rem auto 0 auto;\n  max-width: 500px;\n`;\nexport const AppNavBar = styled.ul`\n  flex-direction: row;\n`;\nexport const AppNavBarItem = styled.li`\n  margin-left: 10px;\n`;\nexport const ListItemWrap = styled.li`\n  margin-bottom: 30px;\n`;\nexport const PostContent = styled.div`\n  margin-top: 25px;\n`;\nexport const AppNavHeader = styled.div`\n  .anticon {\n    vertical-align: inherit;\n    color: black;\n    margin-right: 30px;\n  }\n`;\n//mainPageNav\nexport const ContainerNav = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: 'Quicksand', sans-serif;\n`;\nexport const PageTitle = styled.div`\n  text-align: center;\n  padding-bottom: 30px\n\n`;\nexport const NavMenu = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n`;\nexport const NavUl = styled.ul`\n\n`;\nexport const NavLi = styled.li`\n  display: inline;\n  list-style: none;\n  text-transform: uppercase;\n  margin-left: 40px;\n\n  a {\n    text-transform: uppercase;\n    color: black;\n  }\n\n  a:hover {\n    color: black;\n  }\n`;\n//accHeader\nexport const ContainerAccount = styled.div`\n  display: flex;\n  margin-top: 60px;\n  margin-left: 15px;\n  justify-content: space-around;\n  @media (max-width: 375px) {\n    flex-direction: column;\n  }\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n\n`;\nexport const AccHeader = styled.h1`\n  font-weight: 500;\n  font-size: 64px;\n\n  @media (max-width: 375px) {\n    font-size: 32px;\n  }\n`;\nexport const AccNav = styled.div`\n  display: flex;\n  align-items: flex-start;\n  text-transform: uppercase;\n  margin-top: 30px;\n`;\nexport const NavBtn = styled.div`\n  text-transform: uppercase;\n  margin-right: 18px;\n\n  .ant-btn {\n    color: #007777;\n    border-color: #007777;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n\n  }\n\n  .ant-btn:hover {\n    color: white;\n    border-color: #007777;\n    background-color: #007777;\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  .anticon {\n    vertical-align: inherit;\n  }\n`;\n//main acc\nexport const ContainerAccMain = styled.div`\n\n`;\nexport const AccMainUser = styled.div`\n  display: flex;\n  margin-left: 175px;\n\n  @media only screen and (max-width: 375px) {\n    margin: 25px 15px 0 15px;\n  }\n  @media only screen and (max-width: 768px) {\n    margin: 25px 15px 0 15px;\n  }\n  @media only screen and (max-width: 1200px) {\n    margin: 25px 15px 0 115px;\n  }\n  //@media only screen and (max-width: 1980px) {\n  //  margin: 25px 15px 0 310px;\n  //}\n\n  .ant-btn {\n    color: #007777;\n  }\n\n  .ant-btn span {\n    border-bottom: 1px solid #007777;\n  }\n`;\nexport const AccMainContent = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-left: 5px;\n  @media (max-width: 375px) {\n    flex-direction: column;\n  }\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Content = styled.div`{\n  h3 {\n    font-size: 40px;\n    margin: 40px 0;\n  }\n\n  @media (max-width: 375px) {\n    h3 {\n      margin: 25px 0;\n    }\n  }\n  @media (max-width: 768px) {\n    h3 {\n      margin: 25px 0;\n    }\n  }\n\n  h5 {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n\n  p {\n    font-size: 16px;\n    margin-bottom: 40px;\n  }\n\n  .ant-btn {\n    color: #007777;\n    border-color: #007777;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  .ant-btn:hover {\n    color: white;\n    border-color: #007777;\n    background-color: #007777;\n    font-weight: 500;\n    font-size: 14px;\n  }\n}`\nexport const Details = styled.div`{\n  margin-top: 60px;\n  @media (max-width: 375px) {\n    margin-top: 25px;\n    display: flex;\n    justify-content: space-around;\n  }\n  @media (max-width: 768px) {\n    margin-top: 25px;\n    display: flex;\n    justify-content: space-around;\n  }\n\n  a {\n    display: block;\n    color: #007777;\n    text-decoration: underline #007777;\n  }\n\n  p {\n    margin-bottom: 0em;\n  }\n\n  h5 {\n    //font-size: 24px;\n    font-weight: 500;\n  }\n;\n}`\nexport const HelpCenter = styled.div`{\n  margin-bottom: 30px;\n\n}`\nexport const AccountDetail = styled.div`{\n\n}`\n//accbag\nexport const ContainerAccTable = styled.div`{\n  margin: 0 0 40px 60px;\n\n  h3 {\n    margin: 40px 0;\n    font-size: 40px;\n  }\n\n  @media (max-width: 375px) {\n    margin: 0 0 40px 10px;\n    h3 {\n      margin: 20px 0;\n      font-size: 32px;\n    }\n  }\n  @media (max-width: 768px) {\n    margin: 0 0 40px 10px;\n    h3 {\n      margin: 20px 0;\n      font-size: 32px;\n    }\n  }\n}`\nexport const Consignment = styled.div`{\n  .ant-btn {\n    color: #007777;\n    border-color: #007777;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    margin-right: 18px;\n    width: 25%;\n  }\n\n  .ant-btn:hover {\n    color: white;\n    border-color: #007777;\n    background-color: #007777;\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  @media (max-width: 375px) {\n    .ant-btn {\n      width: 40%;\n    }\n  }\n  @media (max-width: 768px) {\n    .ant-btn {\n      width: 40%;\n    }\n  }\n}`\nexport const AccountBagTable = styled.div`{\n  margin-top: 50px;\n  width: 100%;\n\n  .ant-table-thead > tr > .ant-table-cell {\n    background-color: #007777;\n    color: white;\n    font-size: 16px;\n  }\n\n  .ant-table-cell > .ant-dropdown-link {\n    text-decoration: underline;\n    color: #007777;\n  }\n\n  .ant-table-cell > .ant-btn {\n\n  }\n\n  .last-cell {\n    padding: 0;\n    background-color: #007777;\n  }\n\n  .last-cell:hover {\n    background-color: #ffffff;\n  }\n\n  .last-btn {\n    padding: 10px 55px 37px 55px;\n    color: #ffffff;\n  }\n\n  .anticon {\n    vertical-align: inherit;\n  }\n\n  .last-btn:hover {\n    color: #007777;\n    background-color: #ffffff;\n  }\n}`\n\nexport const Terms = styled.div`{\n  margin-top: 40px;\n\n  .ant-btn {\n    color: #007777;\n    border-color: #007777;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    margin-right: 18px;\n    margin-top: 40px;\n    width: 25%;\n  }\n\n  .ant-btn:hover {\n    color: white;\n    border-color: #007777;\n    background-color: #007777;\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  @media (max-width: 375px) {\n    .ant-btn {\n      width: 40%;\n      margin-top: 20px;\n    }\n  }\n  @media (max-width: 768px) {\n    .ant-btn {\n      width: 40%;\n      margin-top: 20px;\n    }\n  }\n\n}`\n//howit\nexport const ContainerHowIt = styled.div`{\n  margin-left: 45px;\n\n  .ant-btn {\n    color: #007777;\n    border-color: #007777;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    margin-right: 18px;\n    margin-top: 40px;\n    width: 25%;\n  }\n\n  .ant-btn:hover {\n    color: white;\n    border-color: #007777;\n    background-color: #007777;\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  .ant-table-thead > tr > .ant-table-cell {\n    background-color: #007777;\n    color: white;\n    font-size: 16px;\n  }\n\n  h3 {\n    margin: 40px 0;\n    font-size: 40px;\n  }\n\n  p {\n    margin-top: 20px;\n  }\n\n  @media (max-width: 375px) {\n    margin-left: 15px;\n\n    img {\n      width: 100%;\n    }\n\n    .ant-btn {\n      margin-top: 20px;\n      width: 50%;\n    }\n  }\n  @media (max-width: 768px) {\n    margin-left: 15px;\n\n    img {\n      width: 100%;\n    }\n\n    .ant-btn {\n      margin-top: 20px;\n      width: 50%;\n    }\n  }\n}`\n\nexport const HistoryTable = styled.div`{\n  margin-top: 50px;\n  width: 100%;\n}`\n\n\n\n\n\n","export const REGISTER = 'REGISTER';\nexport const registerUser = ({email, name, password}) => {\n    return {\n        type: REGISTER,\n        payload: {\n            request: {\n                url: 'register/',\n                method: 'post',\n                data: {\n                    email,\n                    name,\n                    password\n                }\n            }\n        }\n    }\n};\nexport const LOGIN = 'LOGIN';\nexport const loginUser = ({email, password}) => {\n    return {\n        type: LOGIN,\n        payload: {\n            request: {\n                url: 'login/',\n                method: 'post',\n                data: {\n                    email,\n                    password\n                }\n            }\n        }\n    }\n};\nexport const LOGOUT = 'LOGOUT';\nexport const DELETE_AUTH_HEADER = 'DELETE_AUTH_HEADER';\nexport const logOut = () => (dispatch) => {\n    dispatch({\n        type: LOGOUT,\n        payload: {\n            request: {\n                url: 'logout/',\n                method: 'post'\n            }\n        }\n    });\n    dispatch({\n        type: DELETE_AUTH_HEADER\n    });\n};\nexport const FETCH_USER = 'FETCH_USER';\nexport const fetchUser = () => {\n    return ({\n        type: FETCH_USER,\n        payload: {\n            request: {\n                url: 'user/',\n                method: 'get'\n            }\n        },\n        meta: {\n            asPromise: true,\n        }\n    })\n};\nexport const SET_AUTH_HEADER = 'SET_AUTH_HEADER';\nexport const setAuthHeader = (access_token) => {\n    return ({\n        type: SET_AUTH_HEADER,\n        payload: access_token\n    })\n};\nexport const APP_INIT = 'APP_INIT';\nexport const appInit = () => ({\n        type: APP_INIT\n});\n\n\n","import React, {Component, Fragment} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {AppNavBarItem} from '../../styles/globals';\nimport {connect} from 'react-redux';\nimport {logOut} from '../../store/auth/authActions';\n\nclass MainPageMenu extends Component {\n    render() {\n        const {isAuthorized, logOut} = this.props;\n\n        return (\n            <Fragment>\n                {isAuthorized && <AppNavBarItem className=\"nav-item\">\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/\"\n                        exact\n                    >Home</NavLink>\n                </AppNavBarItem>}\n                <AppNavBarItem className=\"nav-item\">\n                    <NavLink\n                        className=\"nav-link\"\n                        to=\"/about\"\n                    >About</NavLink>\n                </AppNavBarItem>\n                {!isAuthorized ?\n                    <AppNavBarItem className=\"nav-item\">\n                        <NavLink\n                            className=\"nav-link\"\n                            to=\"/login\"\n                        >Log in</NavLink>\n                    </AppNavBarItem> :\n                    <AppNavBarItem className=\"nav-item\">\n                        <NavLink\n                            className=\"nav-link\"\n                            to=\"/logout\"\n                            onClick={() => {\n                                logOut()\n                            }}\n                        >Log out</NavLink>\n                    </AppNavBarItem>\n                }\n            </Fragment>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthorized: state.auth.isAuthorized\n    }\n};\n\nexport default connect(mapStateToProps, {logOut})(MainPageMenu);\n","import React from 'react';\nimport NavBar from './NavBar';\nimport Logo from './Logo';\nimport MainPageMenu from './MainPageMenu';\nimport navImg from '../../styles/assets/header-top-1920.png'\nimport navImg2 from '../../styles/assets/header-1920.png'\nimport {Button, Dropdown, Menu} from 'antd';\nimport {SearchOutlined, UserOutlined, HeartOutlined, ShoppingOutlined, DownOutlined} from '@ant-design/icons';\nimport {AppNavHeader} from \"../../styles/globals\";\n\nconst menu = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3rd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n);\n\nconst Header = () => {\n    return (\n        <div className=\"bg-light\">\n            <div className=\"container\">\n                <AppNavHeader>\n                    <nav className=\"navbar navbar-light mb-3\">\n                        <div>\n                            <Button type=\"text\">About</Button>\n                            <Button type=\"text\">Consignment</Button>\n                            <Button type=\"text\">Contacts</Button>\n                        </div>\n                        <div>\n                            <a href=\"/#\">\n                                <SearchOutlined/>\n                            </a>\n                            <a href=\"/#\">\n                                <UserOutlined/>\n                            </a>\n                            <a href=\"/#\">\n                                <HeartOutlined/>\n                            </a>\n                            <a href=\"/#\">\n                                <ShoppingOutlined/>\n                            </a>\n                            <Dropdown overlay={menu}>\n                                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                    AUD $ <DownOutlined/>\n                                </a>\n                            </Dropdown>\n                        </div>\n                    </nav>\n                </AppNavHeader>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport mainLogo from '../../styles/assets/Vector.svg'\nimport {NavMenu, ContainerNav, PageTitle, NavUl, NavLi} from '../../styles/globals';\nimport {Menu, Dropdown} from 'antd';\nimport {DownOutlined} from '@ant-design/icons';\n\nconst menuClothing = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                4nd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n);\nconst menuHandbag = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                4nd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n);\nconst menuShoes = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                4nd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n);\nconst menuAccessories = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                4nd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n);\n\nconst MainPageNav = () => {\n    return (\n        <ContainerNav>\n            <PageTitle>\n                <img src={mainLogo} alt=\"main logo\"/>\n            </PageTitle>\n            <NavMenu>\n                <NavUl>\n                    <NavLi> <a href=\"/#\"> new arrivals</a></NavLi>\n                    <Dropdown overlay={menuClothing}>\n                        <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                            <NavLi>clothing</NavLi> <DownOutlined/>\n                        </a>\n                    </Dropdown>\n                    <Dropdown overlay={menuHandbag}>\n                        <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                            <NavLi>handbag</NavLi> <DownOutlined/>\n                        </a>\n                    </Dropdown>\n                    <Dropdown overlay={menuShoes}>\n                        <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                            <NavLi>shoes</NavLi> <DownOutlined/>\n                        </a>\n                    </Dropdown>\n                    <Dropdown overlay={menuAccessories}>\n                        <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                            <NavLi>accessories</NavLi> <DownOutlined/>\n                        </a>\n                    </Dropdown>\n                    <NavLi><a href=\"/#\">brands</a></NavLi>\n                </NavUl>\n            </NavMenu>\n\n        </ContainerNav>\n    );\n\n}\nexport default MainPageNav;\n\n","import React from 'react';\nimport {ContainerAccount, AccHeader, AccNav, NavBtn} from \"../../styles/globals\";\nimport {HeartOutlined, CreditCardOutlined, ShoppingOutlined} from '@ant-design/icons';\nimport {Button} from 'antd';\n\n\nconst AccountHeader = ({isShowTurnExp, isShowHowIt, isShowAccBag}) => {\n\n    return (\n        <ContainerAccount>\n            <div>\n                <AccHeader>\n                    My Account\n                </AccHeader>\n                <div style={{display: 'flex'}}>\n                    <h5>Hi User!</h5>\n                    <Button type=\"link\"> Log Out</Button>\n                </div>\n\n            </div>\n            <AccNav>\n                <NavBtn>\n                    <Button\n                        icon={<ShoppingOutlined/>}\n                        size={\"large\"}\n                        onClick={isShowAccBag}> orders</Button>\n                </NavBtn>\n                <NavBtn>\n                    <Button size={\"large\"}\n                            icon={<CreditCardOutlined/>} onClick={isShowTurnExp}> consignment</Button>\n                </NavBtn>\n                <NavBtn>\n                    <Button\n                        size={\"large\"}\n                        icon={<HeartOutlined/>}> wishlist</Button>\n                </NavBtn>\n            </AccNav>\n        </ContainerAccount>\n    );\n}\n\nexport default AccountHeader;","import React from 'react';\nimport {ContainerHowIt, HistoryTable} from \"../../styles/globals\";\nimport howIt from '../../styles/assets/howit.svg'\nimport {Button, Table} from 'antd';\n\nconst dataSource = [\n    {\n        key: '1',\n        list: 'Order#10026',\n        date: 'August 26,2021',\n        status: 'pending',\n        total: '$1245.2',\n    },\n    {\n        key: '1',\n        list: 'Order#10026',\n        date: 'August 26,2021',\n        status: 'pending',\n        total: '$1245.2',\n    },\n    {\n        key: '1',\n        list: 'Order#10026',\n        date: 'August 26,2021',\n        status: 'pending',\n        total: '$1245.2',\n    },\n    {\n        key: '1',\n        list: 'Order#10026',\n        date: 'August 26,2021',\n        status: 'pending',\n        total: '$1245.2',\n    },\n    {\n        key: '1',\n        list: 'Order#10026',\n        date: 'August 26,2021',\n        status: 'pending',\n        total: '$1245.2',\n    },\n];\nconst columns = [\n    {\n        title: 'List',\n        dataIndex: 'list',\n        key: 'list',\n        render: (text) => <a href='/#'>{text}</a>\n    },\n    {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date',\n    },\n    {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n    },\n    {\n        title: 'Total',\n        dataIndex: 'total',\n        key: 'total',\n    },\n];\n\nconst HowIt = ({isShowHowItt, isShowAccBagg}) => {\n    return (\n        <ContainerHowIt>\n            <h3>Consignment</h3>\n            <h5>How it works</h5>\n            <img src={howIt} alt=\"how it works\"/>\n            <p>Entrust your best clothes to us, we will grade them, photograph them, <br/> sell them, and deal with all\n                the fuss. You get up to 80% of the value.\n            </p>\n            <Button size={\"large\"} onClick={isShowHowItt}>consign with us</Button>\n            <HistoryTable>\n                <Table dataSource={dataSource} columns={columns} bordered pagination={false}/>\n            </HistoryTable>\n        </ContainerHowIt>\n    )\n\n}\n\nexport default HowIt;","import React from 'react';\nimport {Table, Menu, Space, Button, Dropdown} from 'antd';\nimport {AccountBagTable, Consignment, ContainerAccTable, NavLi, Terms} from '../../styles/globals'\nimport {\n    PlusCircleOutlined,\n    DownOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckOutlined,\n    CloseOutlined,\n    QuestionOutlined\n} from \"@ant-design/icons\";\n\nconst dataSource = [\n    {\n        key: '1',\n        hashtag: '2',\n        itemType: 'Apparel',\n        brand: 'Holiday by emma muholland',\n        description: 'Dresses ',\n        confirmed: 'v',\n        manage: '123'\n    },\n    {\n        key: '2',\n        hashtag: '2',\n        itemType: 'Footwear',\n        brand: 'Gucci',\n        description: 'Skirts  ',\n        confirmed: 'v',\n        manage: '123'\n    },\n    {\n        key: '3',\n        hashtag: '3',\n        itemType: 'Bags',\n        brand: 'Amanda uprichard',\n        description: 'Dresses',\n        confirmed: 'v',\n        manage: \"\"\n    },\n    {\n        key: '4',\n        hashtag: '4',\n        itemType: 'Apparel',\n        brand: 'Auteur',\n        description: 'Dresses',\n        confirmed: 'v',\n        manage: ''\n    },\n];\n\nconst columns = [\n    {\n        title: '#',\n        dataIndex: 'hashtag',\n        key: 'hashtag',\n    },\n    {\n        title: 'Item Type',\n        dataIndex: 'itemType',\n        key: 'itemType',\n    },\n    {\n        title: 'Brand',\n        dataIndex: 'brand',\n        key: 'brand',\n    },\n    {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n    },\n    {\n        title: 'Confirmed',\n        dataIndex: 'confirmed',\n        key: 'confirmed',\n        render: () => (\n            <div style={{textAlign: \"center\"}}>\n                <CheckOutlined/>\n            </div>\n\n        )\n    },\n    {\n        title: 'Manage',\n        dataIndex: 'manage',\n        key: 'manage',\n        render: () => (\n            <div style={{textAlign: \"center\"}}>\n                <a href=\"/#\" style={{paddingRight: \"15px\", color: '#007777'}}><EditOutlined/></a>\n                <a href=\"/#\" style={{color: '#007777'}}><DeleteOutlined/></a>\n            </div>\n        )\n    },\n];\nconst menuType = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu type\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu type\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3rd menu type\n            </a>\n        </Menu.Item>\n    </Menu>\n)\nconst menuBrand = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                1st menu type\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                2nd menu type\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/#\">\n                3rd menu type\n            </a>\n        </Menu.Item>\n    </Menu>\n)\nconst AccountBag = ({isShowHowItt}) => {\n    return (\n        <ContainerAccTable>\n            <Consignment>\n                <h3>Consignment</h3>\n                <h5>Consignment Ref: </h5>\n                <Button size={\"large\"} onClick={isShowHowItt}>\n                    save\n                </Button>\n                <Button size={\"large\"}>\n                    cancel\n                </Button>\n            </Consignment>\n            <AccountBagTable>\n                <h5>Items in your bag</h5>\n                <Table dataSource={dataSource} columns={columns} bordered pagination={false}\n                       summary={() => (\n                           <Table.Summary fixed>\n                               <Table.Summary.Row>\n                                   <Table.Summary.Cell index={0}>\n                                   </Table.Summary.Cell>\n                                   <Table.Summary.Cell index={1}>\n                                       <Dropdown overlay={menuType}>\n                                           <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()} href='/#'>\n                                               Choose item type <DownOutlined/>\n                                           </a>\n                                       </Dropdown>\n                                   </Table.Summary.Cell>\n                                   <Table.Summary.Cell index={2}>\n                                       <Dropdown overlay={menuBrand}>\n                                           <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()} href='/#'>\n                                               Choose brand <DownOutlined/>\n                                           </a>\n                                       </Dropdown>\n                                   </Table.Summary.Cell>\n                                   <Table.Summary.Cell index={3}>Typology</Table.Summary.Cell>\n                                   <Table.Summary.Cell index={4} colSpan={2} className='last-cell'>\n                                       <Button size={\"large\"} icon={<PlusCircleOutlined/>} type=\"text\"\n                                               className='last-btn'>\n                                           Add Item\n                                       </Button>\n                                   </Table.Summary.Cell>\n                               </Table.Summary.Row>\n                           </Table.Summary>\n                       )}\n                />\n            </AccountBagTable>\n            <Terms>\n                <p>By clicking “Send”, you agree to our <a href=\"/#\">Terms</a> and <a href=\"/#\">Privacy Policy.</a></p>\n                <Button size={\"large\"}>\n                    consign\n                </Button>\n            </Terms>\n\n        </ContainerAccTable>\n\n\n    )\n};\n\nexport default AccountBag","import React from 'react';\nimport {Button} from \"antd\";\nimport {Content} from \"../../styles/globals\";\n\nconst TurnExp = ({isShowHowItt}) => {\n\n    return (\n        <Content>\n            <h3>Consignment</h3>\n            <h5>The Turn is here to provide you with a great experience.</h5>\n            <p>Entrust your best clothes to us, we will grade them, photograph them, <br/> sell them, and deal\n                with\n                all\n                the fuss. You get up to 80% of the value.\n            </p>\n\n            <Button size={\"large\"} onClick={isShowHowItt}>\n                consign with us\n            </Button>\n        </Content>\n    )\n}\nexport default TurnExp","import React from 'react'\nimport {\n    AccMainUser,\n    ContainerAccMain,\n    AccMainContent,\n    Details,\n    HelpCenter,\n    AccountDetail\n} from \"../../styles/globals\";\nimport {Button} from 'antd';\nimport HowIt from \"../howit/HowIt\";\nimport AccountBag from \"../accBag/AccountBag\";\nimport TurnExp from \"../turnExp/TurnExp\";\n\n\nconst AccountMain = ({isShowTurnExp, isShowHowIt, isShowAccBag, turnExp, howIt, accBag}) => {\n    return (\n        <ContainerAccMain>\n            <AccMainUser>\n\n            </AccMainUser>\n            <AccMainContent>\n                {\n                    (turnExp && <TurnExp isShowHowItt={isShowHowIt}/>) ||\n                    (howIt && <HowIt isShowAccBagg={isShowAccBag}/>) ||\n                    (accBag && <AccountBag isShowHowItt={isShowHowIt}/>)\n                }\n                <Details>\n                    <HelpCenter>\n                        <h5>Help Center</h5>\n                        <a href=\"https://theturn.com.au/pages/faqs\">How to Consign</a>\n                        <a href=\"/#\">Payment & Pricing</a>\n                        <a href=\"/#\">Terms & Conditions</a>\n                    </HelpCenter>\n                    <AccountDetail>\n                        <h5>Account Details</h5>\n                        <p>First Name Last Name</p>\n                        <p>Region</p>\n                        <p>Country</p>\n                        <a href=\"/#\" style={{marginTop: '10px'}}>View Addresses(1)</a>\n                    </AccountDetail>\n                </Details>\n\n            </AccMainContent>\n\n        </ContainerAccMain>\n    )\n\n\n}\n\nexport default AccountMain;","import React from 'react'\nimport footerImg from '../../styles/assets/footer-1920.png'\n\nconst AppFooter = () => {\n    return (\n        <div style={{marginTop: '80px'}}>\n            <img src={footerImg} alt=\"footer\"/>\n        </div>\n    );\n\n}\nexport default AppFooter;","import React, {Fragment, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {getListTweets} from '../../store/tweet/tweetActions';\nimport AppHeader from '../header/Header';\nimport {MainWrapper} from '../../styles/globals';\nimport MainPageNav from '../pageNav/MainPageNav'\nimport AccountHeader from \"../accHeader/AccountHeader\";\nimport AccountMain from \"../accMain/AccountMain\";\nimport AppFooter from \"../footer/AppFooter\";\n\n\nconst Home = () => {\n    const [turnExp, setTurnExp] = useState(true);\n    const [howIt, setHowIt] = useState(false);\n    const [accBag, setAccBag] = useState(false);\n\n\n    // componentDidMount() {\n    //     this.props.getListTweets();\n    // };\n\n    const showTurnExp = () => {\n        console.log('showTurnExp')\n        setTurnExp(true)\n        setHowIt(false)\n        setAccBag(false)\n    }\n    const showHowIt = () => {\n        console.log('showHowIt')\n        setTurnExp(false)\n        setHowIt(true)\n        setAccBag(false)\n    }\n    const showAccBag = () => {\n        console.log('showAccBag')\n        setTurnExp(false)\n        setHowIt(false)\n        setAccBag(true)\n    }\n\n    return (\n        <Fragment>\n            <AppHeader/>\n            <MainWrapper>\n                <MainPageNav/>\n                <AccountHeader\n                    isShowTurnExp={() => showTurnExp()}\n                    isShowHowIt={() => showHowIt()}\n                    isShowAccBag={() => showAccBag()}\n                />\n                <AccountMain\n                    turnExp={turnExp}\n                    howIt={howIt}\n                    accBag={accBag}\n                    isShowTurnExp={() => showTurnExp()}\n                    isShowHowIt={() => showHowIt()}\n                    isShowAccBag={() => showAccBag()}\n                />\n\n            </MainWrapper>\n            <AppFooter/>\n        </Fragment>\n    );\n}\n\nexport default connect(null, {getListTweets})(Home);","import React, {Fragment} from 'react';\nimport AppHeader from '../header/Header';\nimport {PageContainer} from '../../styles/globals';\n\nconst About = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<AppHeader/>\n\t\t\t<PageContainer>\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t<h1 className=\"display-4\">About us</h1>\n\t\t\t\t\t<p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra\n\t\t\t\t\t\tattention to featured content or information.</p>\n\t\t\t\t\t<hr className=\"my-4\"/>\n\t\t\t\t\t<p>It uses utility classes for typography and spacing to space content out within the larger\n\t\t\t\t\t\tcontainer.</p>\n\t\t\t\t</div>\n\t\t\t</PageContainer>\n\t\t</Fragment>\n\t);\n};\n\nexport default About;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Input, Button} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {loginUser} from '../../store/auth/authActions';\nimport {connect} from 'react-redux';\n\nconst LoginForm = (props) => {\n    const {getFieldDecorator} = props.form;\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n\n        props.form.validateFieldsAndScroll((err, {username: email, password}) => {\n            if (!err) {\n                props.loginUser({email, password});\n            }\n        });\n    };\n\n    return (\n        <Form\n            onSubmit={onFormSubmit}>\n            <Form.Item>\n                {getFieldDecorator('username', {\n                    rules: [{required: true, message: 'Please input your username!'}],\n                })(\n                    <Input\n                        prefix={<UserOutlined/>}\n                        placeholder=\"Username\"\n                    />,\n                )}\n            </Form.Item>\n            <Form.Item>\n                {getFieldDecorator('password', {\n                    rules: [{required: true, message: 'Please input your Password!'}],\n                })(\n                    <Input\n                        prefix={<LockOutlined/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />,\n                )}\n            </Form.Item>\n            <Form.Item style={{textAlign: 'center'}}>\n                <Button type=\"primary\" htmlType=\"submit\">Log in</Button>\n                <p className=\"d-inline ml-4\">\n                    <Link to=\"/register\">Sign up</Link>\n                </p>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default connect(null, {loginUser})(LoginForm);","import React, {Fragment} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport LoginForm from '../auth/LoginForm.js';\nimport AppHeader from '../header/Header';\nimport {PageContainer} from '../../styles/globals';\n\nconst Authorization = ( props ) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t{props.isAuthorized && <Redirect to={'/'}/>}\n\t\t\t<AppHeader/>\n\t\t\t<PageContainer>\n\t\t\t\t<LoginForm {...props}/>\n\t\t\t</PageContainer>\n\t\t</Fragment>\n\t);\n};\n\nexport default Authorization","import React from 'react';\nimport {Form, Input, Button} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {connect} from 'react-redux';\nimport {registerUser} from '../../store/auth/authActions';\nimport {Link} from 'react-router-dom';\n\nconst RegistrationForm = (props) => {\n\n    const {getFieldDecorator} = props.form;\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        props.form.validateFieldsAndScroll((err, {userEmail: email, lastName: name, userPassword: password}) => {\n            if (!err) {\n                props.registerUser({email, name, password});\n            }\n        });\n    };\n\n    return (\n        <Form\n            onSubmit={onFormSubmit}>\n            <Form.Item>\n                {getFieldDecorator('userEmail', {\n                    rules: [{required: true, message: 'Please input your UserEmail!'}],\n                })(\n                    <Input\n                        prefix={<UserOutlined/>}\n                        type=\"text\"\n                        placeholder=\"Email\"\n                    />,\n                )}\n            </Form.Item>\n            <Form.Item>\n                {getFieldDecorator('lastName', {\n                    rules: [{required: true, message: 'Please input your Name!'}],\n                })(\n                    <Input\n                        prefix={<LockOutlined/>}\n                        type=\"text\"\n                        placeholder=\"Name\"\n                    />,\n                )}\n            </Form.Item>\n            <Form.Item>\n                {getFieldDecorator('userPassword', {\n                    rules: [{required: true, message: 'Please input your Password!'}],\n                })(\n                    <Input\n                        prefix={<LockOutlined/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />,\n                )}\n            </Form.Item>\n            <Form.Item style={{textAlign: 'center'}}>\n                <Button type=\"primary\" htmlType=\"submit\">Sign up</Button>\n                <p className=\"d-inline ml-4\">\n                    <Link to=\"/login\">Log in</Link>\n                </p>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default connect(null, {registerUser})(RegistrationForm);","import React, {Fragment} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport '../auth/RegistrationForm.js';\nimport RegistrationForm from '../auth/RegistrationForm';\nimport AppHeader from '../header/Header';\nimport {PageContainer} from '../../styles/globals';\n\nconst Registration = ( props ) => {\n    return (\n        <Fragment>\n            {props.isAuthorized && <Redirect to='/'/>}\n            <AppHeader/>\n            <PageContainer>\n                <RegistrationForm { ...props }/>\n            </PageContainer>\n        </Fragment>\n    );\n};\n\nexport default Registration;","export const SET_ERROR = 'SET_ERROR';\nexport const setError = ({data: {errors = []}}) => {\n    return ({\n        type: SET_ERROR,\n        payload: {\n            errors\n        }\n    });\n};\n","import React, {Component} from 'react';\nimport {Button, Form, Mentions} from 'antd';\nimport {connect} from 'react-redux';\nimport {getHashTags, getMentions, addTweet, updateTweet} from '../../store/tweet/tweetActions';\nimport debounce from 'lodash/debounce';\n\nclass ItemForm extends Component {\n    state = {\n        search: '',\n        loading: false,\n        tags: [],\n        mentions: [],\n        prefix: '#'\n    };\n\n    loadMentionTagData = debounce(async (key, prefix) => {\n        const {search} = this.state;\n        const {getHashTags, getMentions} = this.props;\n\n        try {\n            switch (prefix) {\n                case '#':\n                    const tags = await getHashTags(key);\n\n                    if (search !== key) return;\n                    this.setState({\n                        tags: tags.payload.data,\n                        loading: false,\n                        prefix\n                    });\n\n                    break;\n                case '@':\n                    const mentions = await getMentions(key);\n\n                    if (search !== key) return;\n                    this.setState({\n                        mentions: mentions.payload.data,\n                        loading: false,\n                        prefix\n                    });\n\n                    break;\n            }\n        } catch (error) {\n            console.log('Something went wrong', error);\n        }\n    }, 800);\n\n    onSearch = (search, prefix) => {\n        this.setState({search, loading: true, tags: [], mentions: []});\n        this.loadMentionTagData(search, prefix);\n    };\n\n    onActionItem = (e) => {\n        const {id = 0, addTweet, updateTweet, formType = 'add'} = this.props;\n\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                switch (formType) {\n                    case 'add':\n                        addTweet(values.content);\n                        this.props.form.resetFields();\n                        break;\n                    case 'edit':\n                        updateTweet(id, values.content);\n                        this.props.toggleFormVisibility();\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n    };\n\n    onPressEnter = (e) => {\n        if (e.key === 'Enter') {\n            if (e.ctrlKey || e.metaKey) {\n                const value = this.props.form.getFieldValue('content');\n                this.props.form.setFieldsValue({\n                    content: value + '\\n',\n                });\n            } else {\n                this.onActionItem(e);\n            }\n        }\n    };\n\n    render() {\n        const {content = '', submitButtonName = '', submitButtonPosition = \"left\"} = this.props;\n\n        const {Option} = Mentions;\n        const {getFieldDecorator} = this.props.form;\n        const {prefix, tags, mentions, loading} = this.state;\n\n        return (\n            <Form onSubmit={this.onActionItem}>\n                <Form.Item>\n                    {getFieldDecorator('content', {\n                        rules: [{required: true, message: 'Please input post content', whitespace: true, min: 1}],\n                        initialValue: content\n                    })(\n                        <Mentions\n                            rows=\"4\"\n                            loading={loading}\n                            placeholder=\"Put your text here\"\n                            autoFocus\n                            onKeyPress={this.onPressEnter}\n                            style={{width: '100%'}}\n                            prefix={['@', '#']}\n                            onSearch={this.onSearch}\n                        >\n                            {(prefix === '#') ?\n                                tags.map(value => (\n                                    <Option key={value} value={value}>\n                                        {value}\n                                    </Option>\n                                ))\n                                :\n                                mentions.map(value => (\n                                    <Option key={value} value={value}>\n                                        {value}\n                                    </Option>\n                                ))}\n                        </Mentions>\n                    )}\n                </Form.Item>\n                <Form.Item style={{textAlign: submitButtonPosition}}>\n                    <Button type=\"primary\" htmlType=\"submit\">{submitButtonName}</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default connect(null, {getHashTags, getMentions, updateTweet, addTweet})(ItemForm);","import React from 'react';\nimport {updateTweet} from '../../store/tweet/tweetActions';\nimport ItemForm from './ItemForm';\nimport {connect} from 'react-redux';\n\nconst ItemEditingForm = (props) => {\n    const { content, id, toggleFormVisibility } = props;\n\n    return (\n        <ItemForm\n            toggleFormVisibility={toggleFormVisibility}\n            content={content}\n            id={id}\n\n            handleAction={updateTweet}\n            submitButtonName=\"Edit tweet\"\n            formType=\"edit\"\n        />\n    )\n};\n\nexport default connect( null, {updateTweet} )( ItemEditingForm );","const colors = [\n    '#F44336', '#e91e63', '#9c27b0', '#673ab7',\n    '#ff9800', '#ff5722', '#795548', '#607d8b',\n    '#3f51b5', '#2196F3', '#00bcd4', '#009688',\n    '#2196F3', '#32c787', '#00BCD4', '#ff5652',\n    '#ffc107', '#ff85af', '#FF9800', '#39bbb0',\n    '#4CAF50', '#ffeb3b', '#ffc107',\n];\n\nexport const getAvatarColor = (name) => {\n    name = name.substr(0, 6);\n\n    let hash = 0;\n\n    for (let i = 0; i < name.length; i++) {\n        hash = 31 * hash + name.charCodeAt(i);\n    }\n    const index = Math.abs(hash % colors.length);\n    return colors[index];\n};","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {ListItemWrap, PostContent} from '../../styles/globals';\nimport {delTweet} from '../../store/tweet/tweetActions';\nimport {setError} from '../../store/error/errorActions';\nimport moment from 'moment';\nimport {Link} from \"react-router-dom\";\nimport ItemEditingForm from './ItemEditingForm';\nimport {Card, Avatar} from 'antd';\nimport {SettingOutlined, DeleteOutlined, EditOutlined} from '@ant-design/icons';\nimport {getAvatarColor} from '../../utils/colors';\n\n\nclass TweetListItem extends Component {\n    state = {\n        formVisibility: false\n    };\n\n    toggleFormVisibility = () => {\n        this.setState({\n            formVisibility: !this.state.formVisibility\n        });\n    };\n\n    handledHashTagMention = (content) => {\n        const regAll = /([#@]\\w\\S*)/g;\n        const regHashteg = /([#]\\w\\S*)/g;\n        const regMention = /([@]\\w\\S*)/g;\n        const parts = content.split(regAll);\n\n        return parts.map(part => {\n            if (part.match(regHashteg)) {\n                return <Link key={part} to={`/hashtag/${part.replace('#', '')}`}>{part}</Link>\n            } else if (part.match(regMention)) {\n                return <Link key={part} to={`/mention/${part.replace('@', '')}`}>{part}</Link>\n            } else {\n                return part\n            }\n        })\n    };\n\n    render() {\n        const {content, id, author, created_at, delTweet, user} = this.props;\n        const isPostYour = (author.id === user.id);\n        const contentWithTagsMentions = this.handledHashTagMention(content);\n        const {Meta} = Card;\n\n        const authUser = [\n            <SettingOutlined key=\"setting\"/>,\n            <DeleteOutlined key=\"delete\" onClick={() => delTweet(this.props.id)}/>,\n            <EditOutlined key=\"edit\" onClick={() => this.toggleFormVisibility()}/>\n\n\n        ];\n        const notAuthUser = [\n            <SettingOutlined key=\"setting\"/>,\n        ];\n\n        return (\n            <ListItemWrap>\n                <Card\n                    actions={isPostYour ? authUser : notAuthUser}\n                    key={id}\n                >\n                    <Meta\n                        avatar={\n                            <Avatar\n                                style={{backgroundColor: getAvatarColor(author.name)}}\n                            >\n                                {author.name[0].toUpperCase()}\n                            </Avatar>}\n                        title={`user : ${author.name}`}\n                        description={moment(created_at).fromNow()}\n                    />\n                    <PostContent>\n                        {(!this.state.formVisibility) ?\n                            contentWithTagsMentions\n                            :\n                            <ItemEditingForm\n                                toggleFormVisibility={this.toggleFormVisibility}\n                                content={content}\n                                id={this.props.id}\n                            />}\n                    </PostContent>\n                </Card>\n            </ListItemWrap>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user\n    }\n};\n\nexport default connect(mapStateToProps, {delTweet, setError})(TweetListItem);","import React from 'react';\nimport TwitterListItem from './TweetListItem';\nimport {ListWrapper} from '../../styles/globals';\nimport {connect} from 'react-redux';\nimport {searchItems} from '../../utils/searchItems';\nimport { Empty } from 'antd';\n\nconst TweetList = ( props ) => {\n\tconst {tweets: {items, search}} = props;\n\n    return (\n        <ListWrapper className=\"list-group\">\n            {\n                (items.length !== 0) ?\n                    searchItems(items, search).map((item) => {\n                        return (\n                            <TwitterListItem key={item.id} {...item} />\n                        );\n                    })\n                    :\n                    <Empty/>\n            }\n        </ListWrapper>\n    );\n};\n\nconst mapStateToProps = ( state ) => {\n\treturn {\n\t\ttweets: state.tweets\n\t}\n};\n\nexport default connect( mapStateToProps )( TweetList );","export const searchItems = ( items = [], search = '' ) => {\n    if ( search.length === 0 ) {\n        return items;\n    }\n    return items.filter( ( item ) => {\n        return item.content.toLowerCase().indexOf( search.toLowerCase() ) > - 1;\n    } );\n};","import React, {Fragment, Component} from 'react';\nimport AppHeader from '../header/Header';\nimport {PageContainer} from '../../styles/globals';\nimport {getListTweets, emptyPosts} from '../../store/tweet/tweetActions';\nimport TweetList from '../tweet/TweetList';\nimport {connect} from 'react-redux';\n\nclass Hashtag extends Component {\n\tstate = {\n\t\thashTagName: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tconst {name: hashTagName} = this.props.match.params;\n        this.getHashTagPosts(hashTagName);\n\t}\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.name!==this.props.match.params.name) {\n            const {name: hashTagName} = this.props.match.params;\n            this.getHashTagPosts(hashTagName);\n        }\n    }\n\n    getHashTagPosts = (hashTagName) => {\n        this.props.getListTweets({hashtag: hashTagName });\n        this.props.emptyPosts();\n\n        this.setState({\n            hashTagName: hashTagName\n        });\n    };\n\n\trender() {\n\t\tconst {hashTagName} = this.state;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<AppHeader/>\n\t\t\t\t<PageContainer>\n\t\t\t\t\t<h5 className=\"mb-4\">All posts for hashtag: <strong>{hashTagName}</strong></h5>\n\t\t\t\t\t<TweetList/>\n\t\t\t\t</PageContainer>\n\t\t\t</Fragment>\n\t\t);\n\t};\n}\n\nexport default connect( null, {getListTweets, emptyPosts} )( Hashtag );","import React, {Fragment, Component} from 'react';\nimport AppHeader from '../header/Header';\nimport {PageContainer} from '../../styles/globals';\nimport TweetList from '../tweet/TweetList';\nimport {getListTweets, emptyPosts} from '../../store/tweet/tweetActions';\nimport {connect} from 'react-redux';\n\nclass Mentions extends Component {\n\tstate = {\n\t\tmentionName: ''\n\t};\n\n    componentDidMount() {\n        const {name: mentionName = ''} = this.props.match.params;\n        this.getMentionPosts(mentionName);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.name!==this.props.match.params.name) {\n            const {name: mentionName = ''} = this.props.match.params;\n            this.getMentionPosts(mentionName);\n        }\n    }\n\n    getMentionPosts = (mentionName) => {\n        this.props.getListTweets( {mentions: mentionName} );\n        this.props.emptyPosts();\n\n        this.setState( {\n            mentionName\n        });\n    };\n\n\trender() {\n\t\tconst {mentionName} = this.state;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<AppHeader/>\n\t\t\t\t<PageContainer>\n\t\t\t\t\t<h5 className=\"mb-4\">All posts for mention: <strong>{mentionName}</strong></h5>\n\t\t\t\t\t<TweetList/>\n\t\t\t\t</PageContainer>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default connect( null, {getListTweets, emptyPosts} )( Mentions );","import React from 'react';\nimport { Result, Button } from 'antd';\n\nconst Page404 = () => {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\" href=\"/\" >Back Home</Button>}\n        />\n    );\n};\n\nexport default Page404;","import React from 'react';\nimport Home from '../pages/Home';\nimport About from '../pages/About';\nimport Authorization from '../pages/Authorization';\nimport Registration from '../pages/Registration';\nimport PrivateRoute from './PrivateRoute';\nimport Hashtag from '../pages/Hashtag';\nimport Mentions from '../pages/Mentions';\nimport Page404 from '../pages/Page404';\nimport {Route, Switch} from 'react-router-dom';\nimport { Menu, Dropdown } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\n\nconst Navigation = (props) => {\n    const {isAuthorized} = props;\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/login\" render={() => <Authorization/>}/>\n            <Route path=\"/register\" render={() => <Registration/>}/>\n            <Route path=\"/logout\" render={() => <Authorization/>}/>\n            <Route path=\"/hashtag/:name\" render={(props) => <Hashtag {...props} />}/>\n            <Route path=\"/mention/:name\" render={(props) => <Mentions {...props} />}/>\n            <Route path='/Page404' component={Page404}/>\n            <Route from='*' exact={true} component={Page404}/>\n        </Switch>\n    );\n};\n\n\nexport default (Navigation);","import React from 'react';\nimport {notification} from 'antd';\nimport {Redirect} from 'react-router-dom';\nimport uuid from \"uuid\";\nimport {connect} from 'react-redux';\n\nconst ErrorNotification = (props) => {\n    return props.errors.map((error) => {\n        if (error === 404) {\n            return (<Redirect key={uuid()} to={\"/page404\"}/>)\n        }\n        notification.error({message: error});\n    });\n};\n\nexport default connect()(ErrorNotification);","import React from 'react';\nimport Navigation from './navigation/Navigation.js';\nimport {appInit} from '../store/auth/authActions';\nimport {connect} from 'react-redux';\nimport 'antd/dist/antd.css';\nimport ErrorNotification from './ErrorNotification';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nclass App extends React.Component {\n    // componentWillMount() {\n    //     this.props.appInit();\n    // }\n\n    render() {\n        //const {isAuthorized} = this.props;\n        //isAuthorized={isAuthorized}\n        const {errorsArr} = this.props.errors;\n\n        return (\n            <Router>\n                <Navigation/>\n                <ErrorNotification errors={errorsArr}/>\n            </Router>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthorized: state.auth.isAuthorized,\n        errors: state.errors\n    }\n};\n\nexport default connect(mapStateToProps, {appInit})(App);","import './authActions';\nimport {success} from 'redux-saga-requests';\nimport {\n    LOGOUT,\n    FETCH_USER\n} from './authActions';\n\nconst initialState = {\n    user: {},\n    isAuthorized: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case LOGOUT:\n            return {\n                ...initialState\n            };\n        case success(FETCH_USER):\n            return {\n                ...state,\n                user: action.payload.data,\n                isAuthorized: true\n            };\n        default:\n            return state;\n    }\n};","import './tweetActions';\nimport {success} from 'redux-saga-requests';\nimport {\n    ADD_TWEET,\n    DELETE_TWEET,\n    UPDATE_TWEET,\n    GETALL_TWEETS,\n    SET_SEARCH_QUERY,\n    EMPTY_POSTS\n} from './tweetActions';\n\nconst initialState = {\n    items: [],\n    search: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case success(ADD_TWEET):\n            return {\n                ...state,\n                items: [action.payload.data, ...state.items]\n            };\n        case success(DELETE_TWEET):\n            const deleteItemId = state.items.findIndex((item) => item.id === action.meta.id);\n            return {\n                ...state,\n                items: [...state.items.slice(0, deleteItemId), ...state.items.slice(deleteItemId + 1)]\n            };\n        case success(UPDATE_TWEET):\n            const updateItemId = state.items.findIndex((item) => item.id === action.meta.id);\n            const item = {...state.items[updateItemId], content: action.payload.data.content};\n\n            return {\n                ...state,\n                items: [...state.items.slice(0, updateItemId), item, ...state.items.slice(updateItemId + 1)]\n            };\n        case success(GETALL_TWEETS):\n            const {data: items} = action.payload;\n\n            return {\n                ...state,\n                items\n            };\n        case SET_SEARCH_QUERY:\n            return {\n                ...state,\n                search: action.payload.searchQuery\n            };\n        case EMPTY_POSTS:\n            return {\n                ...state,\n                items: []\n            };\n        default:\n            return state;\n    }\n};","import {SET_ERROR} from './errorActions';\n\nconst initialState = {\n    errorsArr: []\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERROR:\n            return {\n               errorsArr: action.payload.errors\n            };\n        default:\n            return state;\n    }\n};","export class AuthService {\n    static setToken(tokenName, tokenValue) {\n        localStorage.setItem(tokenName, tokenValue);\n    }\n    static unsetToken(tokenName) {\n        localStorage.removeItem(tokenName);\n    }\n    static getToken(tokenName) {\n        return localStorage.getItem(tokenName);\n    }\n}","import {createRequestInstance, watchRequests} from 'redux-saga-requests';\nimport { createDriver } from 'redux-saga-requests-axios';\n\nexport const rootSaga = function* rootSaga(axios) {\n    yield createRequestInstance({\n        driver: createDriver(axios)\n    });\n    yield watchRequests();\n};","import axios from 'axios';\n\n/* reducers */\nimport authReducer from './auth/authReducer';\nimport tweetReducer from './tweet/tweetReducer';\nimport errorReducer from './error/errorReducer';\n\n/* middleware */\nimport thunkMiddleware from 'redux-thunk';\nimport {tweetMiddleware} from './tweet/tweetMiddleware';\nimport {setAxiosDefaults} from './auth/axiosDefaultsMiddleware';\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport {authMiddleware} from './auth/authMiddleware';\nimport createSagaMiddleware from 'redux-saga';\nimport {requestsPromiseMiddleware} from 'redux-saga-requests';\n\n/* sagas */\nimport {rootSaga} from './rootSaga.js';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = (\n    typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n) || compose;\n\nexport default createStore(\n    combineReducers({\n        auth: authReducer,\n        tweets: tweetReducer,\n        errors: errorReducer\n    }), composeEnhancers(applyMiddleware(\n        thunkMiddleware,\n        authMiddleware,\n        setAxiosDefaults,\n        tweetMiddleware,\n        sagaMiddleware,\n        requestsPromiseMiddleware()\n    ))\n);\n\nsagaMiddleware.run(rootSaga, axios);\n","import {success, error} from 'redux-saga-requests';\nimport {AuthService} from '../../storage/authService';\nimport {\n    REGISTER,\n    LOGIN,\n    APP_INIT,\n    fetchUser,\n    setAuthHeader,\n    LOGOUT\n} from './authActions';\nimport {setError} from '../error/errorActions';\n\nexport const authMiddleware = (store) => next => async action => {\n    switch (action.type) {\n        case success(REGISTER):\n        case success(LOGIN):\n            const { access_token: accessToken } = action.payload.data;\n\n            AuthService.setToken('access_token', accessToken);\n            next(setAuthHeader(accessToken));\n            await next(fetchUser());\n\n            break;\n        case error(REGISTER):\n        case error(LOGIN):\n            next(setError(action.payload.response));\n            break;\n        case APP_INIT:\n            try {\n                const access_token = AuthService.getToken('access_token');\n\n                if (access_token) {\n                    next(setAuthHeader(access_token));\n                    await next(fetchUser());\n                }\n            } catch (errors) {\n                next(setError(errors.payload.response));\n            }\n            break;\n        case LOGOUT:\n            AuthService.unsetToken('access_token');\n            break;\n        default:\n            break;\n    }\n    return next(action);\n};\n","import axios from 'axios';\nimport {\n    DELETE_AUTH_HEADER,\n    SET_AUTH_HEADER\n} from \"./authActions\";\nimport {AXIOS_DEFAULT_BASE_URL} from '../../configs/axios.config';\n\nexport const setAxiosDefaults = (store) => (next) => (action) => {\n    switch (action.type) {\n        case SET_AUTH_HEADER:\n            axios.defaults.headers.common['Authorization'] = `Bearer ${action.payload}`;\n            break;\n        case DELETE_AUTH_HEADER:\n            delete axios.defaults.headers.common['Authorization'];\n            break;\n        default:\n            axios.defaults.baseURL = AXIOS_DEFAULT_BASE_URL;\n            break;\n    }\n    return next(action)\n};","export const AXIOS_DEFAULT_BASE_URL = 'http://127.0.0.1:8000/api/';","import {error} from 'redux-saga-requests';\n// import {setError} from '../error/errorActions';\nimport {\n    ADD_TWEET,\n    DELETE_TWEET,\n    UPDATE_TWEET,\n    GETALL_TWEETS\n} from './tweetActions';\n\nexport const tweetMiddleware = (store) => (next) => async (action) => {\n    switch (action.type) {\n        case error(ADD_TWEET):\n        case error(DELETE_TWEET):\n        case error(UPDATE_TWEET):\n        case error(GETALL_TWEETS):\n        // next(setError(action.payload.response));\n        // break;\n        default:\n            break;\n    }\n    return next(action);\n};","import {createGlobalStyle} from 'styled-components';\nimport QuicksandMedium from './Quicksand-Medium.ttf'\n\nconst GlobalFont = createGlobalStyle`\n  @font-face {\n    font-family: 'Quicksand', sans-serif;\n    src: url(${QuicksandMedium}) format('ttf');\n    font-weight: 500;\n    font-style: normal;\n  }\n`;\nexport default GlobalFont;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport {Provider} from 'react-redux';\nimport store from './store/index.js';\nimport GlobalFont from './styles/fonts/fonts'\n\nReactDOM.render(\n    <Provider store={store}>\n        <GlobalFont/>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}